name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci

    - name: Iniciar el servidor Express
      run: |
        nohup node index.js > server.log 2>&1 &
        echo $! > server.pid

    - name: Instalar ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list >/dev/null
        sudo apt update && sudo apt install ngrok

    - name: Exponer aplicación con ngrok
      run: |
        nohup ngrok http 3000 > ngrok.log 2>&1 &
        sleep 5
        curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Verificar que el servidor esté funcionando
      run: curl -f http://localhost:3000 || exit 1

    - name: Mostrar logs del servidor
      run: cat server.log

    - name: Mostrar URL pública de ngrok
      run: cat ngrok.log | grep -o "http://[0-9a-z.-]*.ngrok.io" | head -1

    - name: Detener el servidor
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid)
          rm server.pid
        fi
